name: Go

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*
  workflow_dispatch: { }

env:
  # Common versions
  GO_VERSION: '1.19'
  GOLANGCI_VERSION: 'v1.49'

jobs:
  staticcheck:
    strategy:
      matrix:
        machines: [ "ubuntu-20.04","macos-12" ]
    runs-on: ${{ matrix.machines }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Download resources
        run: |
          make download_vela_images_addons
          make download_k3s_images
          make download_k3s_bin_script
          make download_k3d

      - name: Go Dependencies
        run: |
          go mod tidy
          go get -t -v -d ./...

      - name: Install StaticCheck
        run:  go install honnef.co/go/tools/cmd/staticcheck@v0.3.0

      - name: Static Check
        run: staticcheck ./...

  lint:
    strategy:
      matrix:
        machines: [ "ubuntu-20.04","macos-12" ]
    runs-on: ${{ matrix.machines }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Download resources
        run: |
          make download_vela_images_addons
          make download_k3s_images
          make download_k3s_bin_script
          make download_k3d

      # This action uses its own setup-go, which always seems to use the latest
      # stable version of Go. We could run 'make lint' to ensure our desired Go
      # version, but we prefer this action because it leaves 'annotations' (i.e.
      # it comments on PRs to point out linter violations).
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_VERSION }}
          args: --timeout 20m

  go-check:
    strategy:
      matrix:
        machines: [ "ubuntu-20.04","macos-12" ]
    runs-on: ${{ matrix.machines }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Go Dependencies
        run: |
          go mod tidy
          go get -t -v -d ./...

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Download resources
        run: |
          make download_vela_images_addons
          make download_k3s_images
          make download_k3s_bin_script
          make download_k3d

      - name: Check Diff
        run: make check-diff

